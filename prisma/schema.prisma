// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  image          String?
  email          String?    @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  sessions       Session[]
  ShortUrl       ShortUrl[]
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ShortUrl {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  originalUrl String
  slug        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user  User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  Visit Visit[]
}

model Visit {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  ipAddress     String
  count         Int
  shortUrlId    String   @db.ObjectId
  createdAtDate DateTime? @db.Date @default(now())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  shortUrl ShortUrl @relation(fields: [shortUrlId], references: [id], onDelete: Cascade)
  ipGeo    IPGeo?
}

model IPGeo {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  ipAddress      String
  continentCode  String
  continentName  String
  countryCode2   String
  countryCode3   String
  countryName    String
  countryCapital String
  latitude       Float
  longitude      Float
  countryFlag    String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  visitId        String   @unique @db.ObjectId

  visit Visit @relation(fields: [visitId], references: [id])
}
